WEBVTT

1
00:00:02.570 --> 00:00:08.559
Stephen Curran: Meeting. welcome to the July seventeenth, 2,023, and on credit specification working group meeting.

2
00:00:08.620 --> 00:00:15.059
Stephen Curran: so pr, is to review. And then I want to talk about, and all the credits in W. 3 C. Format.

3
00:00:16.480 --> 00:00:21.319
Stephen Curran: we may be pushing forward. BC. Got baby pushing forward on

4
00:00:21.420 --> 00:00:29.379
Stephen Curran: getting code behind that getting more code behind that. So I wanted to get feedback from the community on that

5
00:00:29.420 --> 00:00:33.829
Stephen Curran: to make sure that if we are producing that we can get to the right thing.

6
00:00:34.150 --> 00:00:43.670
Stephen Curran: after that open discussion we can talk about anything people want to raise. we are recording. So I'll record post this after the meeting.

7
00:00:44.030 --> 00:00:53.759
Stephen Curran: reminder. It's a Linux Foundation Hyper ledger meeting. So the antitrust policy of the Linux foundation is in effect, as is the Hyper Ledger code of conduct.

8
00:00:54.180 --> 00:01:01.310
Stephen Curran: anyone want to introduce themselves new to the meeting? and new to, you know, credits.

9
00:01:01.480 --> 00:01:05.370
Stephen Curran: and have feel free to grab the mic and introduce

10
00:01:10.030 --> 00:01:14.140
Stephen Curran: Nice. I don't think I recognize but you but welcome to tail.

11
00:01:14.680 --> 00:01:22.150
Stephen Curran:  all right.

12
00:01:22.770 --> 00:01:37.489
Stephen Curran: We've got a few prs to review. So I wanted to get those done. Took a look through them today, saw some things that I wanted to talk about on that. So let's get into looking at the Pr. As we have. We've got 4 of them

13
00:01:39.840 --> 00:01:45.799
Stephen Curran: as noted. This one was put in quite a while ago.

14
00:01:45.920 --> 00:01:49.840
Stephen Curran: We've done had a couple of back and forth on it.

15
00:01:50.010 --> 00:01:53.640
Stephen Curran: This is to do with adding a link secret.

16
00:01:55.270 --> 00:02:00.490
So whoops. Let me get these to the right spot.

17
00:02:03.150 --> 00:02:04.320
Stephen Curran: Okay.

18
00:02:04.750 --> 00:02:18.089
Stephen Curran: I don't know Mike, or a reach, or if you've had a chance to look at these, but would be good. Looks like most of these. not much is changed. Oh, I see a little

19
00:02:18.510 --> 00:02:19.450
Stephen Curran: thanks.

20
00:02:19.930 --> 00:02:32.419
Stephen Curran: Minor fixed er but the V becomes V. This is where I I don't know enough about it, but slight change there in content. This content is added.

21
00:02:33.030 --> 00:02:43.539
Stephen Curran:  Mike, would you be able to review this or have you reviewed it? And Is is it accurate?

22
00:02:44.980 --> 00:02:53.500
Michael Lodder: I have not reviewed it. This is my first time seeing it. But this, this does look familiar.

23
00:02:55.050 --> 00:03:06.640
Stephen Curran: This looks like you're just taking exactly what's happening in the code, putting it as a spec.

24
00:03:07.460 --> 00:03:16.099
Stephen Curran: But we do want to make sure that what goes in is is correct, and I I can find things up to

25
00:03:16.340 --> 00:03:27.939
Stephen Curran: these parts. And I've got a few comments on some of the other Pr's from that perspective. But I don't know enough of of interpreting this.

26
00:03:31.300 --> 00:03:35.589
Stephen Curran: I guess, with these Pdfs. We can't point out where.

27
00:03:37.250 --> 00:03:39.849
Stephen Curran: where in the spec we should be looking

28
00:03:42.190 --> 00:03:48.769
Stephen Curran:  like to find the definition. So that's one of the things that I notice.

29
00:03:48.800 --> 00:03:56.829
Stephen Curran: or you did as well, and they're doing it, which is all they do is point to the Pdf. As opposed to the specific section within the Pdf.

30
00:03:57.140 --> 00:04:09.960
Stephen Curran: And even if it's got to be referenced by, you know, can't be linked directly inside the Pdf. Which I don't think we can do as the Pdf. Is now we should be at least pointing to where to go.

31
00:04:11.900 --> 00:04:19.510
Stephen Curran:  So, Mike, maybe you take a look at these

32
00:04:20.730 --> 00:04:24.949
Stephen Curran: also wondered why this didn't get interpreted properly.

33
00:04:26.570 --> 00:04:28.720
Michael Lodder: Yeah. And the line above it, too.

34
00:04:29.100 --> 00:04:39.189
Michael Lodder:  I, I, you know what I think, it is the mark down render is pretty finicky, you can't have spaces between the double dollars.

35
00:04:39.520 --> 00:04:43.809
Stephen Curran: And so I think that's what's going on. They see spaces.

36
00:04:44.300 --> 00:04:55.090
Stephen Curran: One of the things we could do is simply accept the Pr and update, you know, make the tweaks to get the to get those fixed. So that would be easy enough if the rest of it is more or less right?

37
00:04:56.050 --> 00:05:02.090
Stephen Curran: I think that's all he did. So it's those those sections relatively easy to see.

38
00:05:02.370 --> 00:05:05.290
Stephen Curran: I assume you can't do this on the fly.

39
00:05:09.300 --> 00:05:12.000
Michael Lodder:  yeah. Do what

40
00:05:12.120 --> 00:05:23.549
Stephen Curran: Evaluate whether he's got these things correct or not? I've got the version up on my screen somewhere else. So I'm just taking a look.

41
00:05:24.210 --> 00:05:29.890
Michael Lodder: So he put like, our caps aren't used. I think they're only used for the

42
00:05:30.010 --> 00:05:34.029
Michael Lodder: the correctness proof. Otherwise, yeah, they aren't used anywhere else.

43
00:05:39.180 --> 00:05:43.259
Michael Lodder: So like it where it says, our caps net destruction. This version.

44
00:05:43.600 --> 00:05:47.800
Michael Lodder: It's just the those are only use for the setup part.

45
00:05:48.820 --> 00:05:50.390
Stephen Curran: Oh, so it is you.

46
00:05:50.470 --> 00:06:00.479
Michael Lodder: It's used. But it's not like it's not used every time you do a proof, it's only used for the correctness part. So we'd probably rip that part out.

47
00:06:00.930 --> 00:06:01.820
Stephen Curran: okay.

48
00:06:03.520 --> 00:06:09.979
Michael Lodder: yeah. The unfortunate thing is, you can't really comment right here very easily. But maybe we could make a list

49
00:06:11.520 --> 00:06:15.290
Stephen Curran: to come back to this, though, come back to this.

50
00:06:16.800 --> 00:06:19.950
Michael Lodder: Oh, okay, yeah. So if we could add up there, that'd be good.

51
00:06:22.130 --> 00:06:23.470
Stephen Curran: What do you want to say?

52
00:06:26.070 --> 00:06:30.359
Michael Lodder: our caps belongs only in the correctness setup roof.

53
00:06:39.730 --> 00:06:41.759
Stephen Curran: So do you remove from here?

54
00:06:42.210 --> 00:06:42.960
Michael Lodder: Yep.

55
00:06:56.210 --> 00:07:01.960
Michael Lodder: and I'm trying to decide why he's saying it's necessary to check.

56
00:07:08.110 --> 00:07:09.550
Michael Lodder: Hey? Hello.

57
00:07:13.540 --> 00:07:14.370
yeah.

58
00:07:20.180 --> 00:07:24.750
Michael Lodder: Okay, so this is issuance. All right. the primary credentials.

59
00:07:25.180 --> 00:07:26.160
Stephen Curran: Yeah.

60
00:07:27.350 --> 00:07:28.250
Michael Lodder: alright.

61
00:07:29.340 --> 00:07:30.959
Stephen Curran: Yeah. This is the

62
00:07:31.410 --> 00:07:34.700
Stephen Curran: why did master secret correct as proof.

63
00:07:42.890 --> 00:07:44.520
Michael Lodder: hey? Let's see

64
00:07:48.270 --> 00:07:49.450
Michael Lodder: you tick.

65
00:07:51.140 --> 00:07:52.280
Michael Lodder: Okay.

66
00:08:03.060 --> 00:08:06.480
Michael Lodder: why do we need to find the inverse of you?

67
00:08:09.620 --> 00:08:13.440
Michael Lodder: It doesn't make sense to me. I don't see that in the math anywhere

68
00:08:15.320 --> 00:08:18.519
Michael Lodder: like Line 320. I don't know why that's needed.

69
00:08:26.760 --> 00:08:28.379
Michael Lodder: Oh, I see. Okay.

70
00:08:45.030 --> 00:08:46.809
Michael Lodder: Oh, I see what he's doing.

71
00:08:49.040 --> 00:08:52.140
Michael Lodder: Okay? So this reads a little weird. So

72
00:08:53.530 --> 00:08:57.580
Michael Lodder: probably what needs to happen here is just some clarifying

73
00:08:57.740 --> 00:09:04.749
Michael Lodder: sentence or something that says the force before issuing begins we need to verify

74
00:09:05.750 --> 00:09:06.990
Michael Lodder: the

75
00:09:07.270 --> 00:09:09.940
Michael Lodder: blind signing request proof

76
00:09:11.740 --> 00:09:15.500
Michael Lodder: by doing the following, and then I would understand what's going on here.

77
00:09:17.780 --> 00:09:19.799
Stephen Curran: So again.

78
00:09:20.400 --> 00:09:23.920
Michael Lodder: before issuing.

79
00:09:24.410 --> 00:09:28.309
Michael Lodder: we need to verify the blind signing request proof.

80
00:09:37.450 --> 00:09:38.950
Stephen Curran: Yeah, I mean, that's

81
00:09:40.330 --> 00:09:41.190
Stephen Curran: okay.

82
00:09:43.900 --> 00:09:52.060
Michael Lodder: Well, as follow up, like as follow up using the following steps, because I was just like what what's going on here.

83
00:09:52.340 --> 00:09:53.660
Stephen Curran: I see what you're saying.

84
00:10:04.700 --> 00:10:11.610
Michael Lodder: Not blinded, linked secret correctness. Purv, it's just a blind, signing request, because maybe in the future you might have more.

85
00:10:13.130 --> 00:10:14.130
Stephen Curran: Okay.

86
00:10:31.170 --> 00:10:35.539
Stephen Curran: I think in the code it's called blinded, linked secret, correct as proof.

87
00:10:36.190 --> 00:10:37.060
Michael Lodder: Hmm!

88
00:10:40.730 --> 00:10:42.310
Michael Lodder: What did you want about it?

89
00:10:42.450 --> 00:10:53.050
Michael Lodder: But I'd like to call the line signing request proof. Because when we go to a non credits, too, that's what it is. But we still have to change the terminology.

90
00:10:53.690 --> 00:10:56.369
Stephen Curran: Blind signing request proof.

91
00:10:56.620 --> 00:10:57.450
Michael Lodder: Yeah.

92
00:10:57.620 --> 00:10:58.510
Stephen Curran: okay?

93
00:10:58.750 --> 00:11:05.439
Michael Lodder:  like. If you've got attributes that you want to sign blindly, you have to do a proof

94
00:11:05.800 --> 00:11:12.050
Michael Lodder: that you truly know what those values are. I mean, you didn't just like get them out any other way.

95
00:11:14.000 --> 00:11:15.550
Michael Lodder: That's the whole point of it.

96
00:12:04.890 --> 00:12:05.820
Stephen Curran: Okay.

97
00:12:10.430 --> 00:12:13.310
Stephen Curran: okay, this is more another ticket.

98
00:12:13.430 --> 00:12:16.430
Stephen Curran: so I can likely put that in.

99
00:12:17.700 --> 00:12:18.510
Michael Lodder: Sure.

100
00:12:20.470 --> 00:12:27.999
Stephen Curran: the rest of this looks okay, other than what this gets in. Does the does the math look right?

101
00:12:28.140 --> 00:12:31.930
Michael Lodder: Let's see. I'm looking right now.

102
00:12:33.290 --> 00:12:36.110
Michael Lodder: that looks fine. That looks fine.

103
00:12:39.640 --> 00:12:44.470
Michael Lodder: Trying to understand what 325 is the just. he's just expanding it out.

104
00:12:47.780 --> 00:12:51.490
Michael Lodder: Yeah, okay, he's just expanding it. Okay, yeah, done that. That's fine.

105
00:12:51.760 --> 00:12:52.720
Stephen Curran: Okay? Good.

106
00:13:00.560 --> 00:13:05.729
Stephen Curran: So in theory, we could, I accept this and just clean it up.

107
00:13:07.760 --> 00:13:09.319
Michael Lodder: Yeah, the future. Pr.

108
00:13:09.420 --> 00:13:17.770
Stephen Curran: yeah, okay. I'm going to go ahead and accept it that way. We don't have to worry about when he gets involved again.

109
00:13:19.090 --> 00:14:01.110
Stephen Curran:  hey?

110
00:14:30.250 --> 00:14:31.190
Stephen Curran: All right.

111
00:14:36.750 --> 00:14:42.969
Stephen Curran: hey? Tails, file generation again. I'll start with just the

112
00:14:46.250 --> 00:14:47.829
Stephen Curran: This view of it.

113
00:14:50.560 --> 00:14:53.650
Stephen Curran: Our reach is on the call. So, oops!

114
00:14:55.820 --> 00:15:01.420
Stephen Curran: Oh. I always do that the one there we go.

115
00:15:03.240 --> 00:15:06.240
Stephen Curran: Okay, this is tails file generation.

116
00:15:07.450 --> 00:15:09.109
Stephen Curran: which is right here.

117
00:15:10.210 --> 00:15:15.060
Stephen Curran: so change to list of primes to points on the curve.

118
00:15:16.210 --> 00:15:23.370
Stephen Curran: biggest thing I saw here. based on the bug that was found

119
00:15:23.800 --> 00:15:25.789
Stephen Curran: in the generation.

120
00:15:26.450 --> 00:15:32.020
Stephen Curran: It sounds like there's one extra point included.

121
00:15:32.300 --> 00:15:37.990
Stephen Curran: And and that was actually the bug. that's in the implementation.

122
00:15:38.760 --> 00:15:41.879
Stephen Curran: Is that right? that? There's one extra.

123
00:15:48.210 --> 00:15:49.810
Stephen Curran: Mike, are you familiar?

124
00:15:50.970 --> 00:15:57.739
Michael Lodder: I'm sort of familiar with what it what it's doing. But like I, I'm looking at the spec on my screen.

125
00:15:57.850 --> 00:16:01.329
Stephen Curran: Yeah, just to compare what I've got here

126
00:16:01.620 --> 00:16:05.589
Michael Lodder: to see if it's exact. And I wonder if it was just not by one error.

127
00:16:07.600 --> 00:16:08.830
Michael Lodder: Let's see.

128
00:16:13.490 --> 00:16:17.080
Stephen Curran: what I understand. The bug is is the first and the

129
00:16:17.590 --> 00:16:21.220
Stephen Curran: for lack of a better term

130
00:16:21.330 --> 00:16:23.959
Stephen Curran: ones are the same.

131
00:16:26.740 --> 00:16:31.540
Michael Lodder: Oh, I know what it is, it is it is an off by one. So here's so. Here's the bug.

132
00:16:31.630 --> 00:16:40.300
Michael Lodder: When you generate points you're supposed to go to like. Say, I'm going to create L number of credentials in the tail's file

133
00:16:40.430 --> 00:16:41.980
Michael Lodder: to represent that many.

134
00:16:43.030 --> 00:16:45.160
Michael Lodder: It's the great points

135
00:16:45.310 --> 00:16:46.389
Michael Lodder: like, say.

136
00:16:46.760 --> 00:16:52.390
Michael Lodder: index, 1, 2 all the way up to L, and then L, plus 2 all the way to 2 out

137
00:16:53.300 --> 00:16:55.960
Michael Lodder: l. Plus one is special

138
00:16:56.040 --> 00:17:00.100
Michael Lodder: because it's tied to the private key.

139
00:17:00.640 --> 00:17:04.820
Michael Lodder: So by including a point at L one, it allows you to forge anything

140
00:17:07.400 --> 00:17:09.189
Michael Lodder: that one's not supposed to be. Now.

141
00:17:09.609 --> 00:17:15.740
Stephen Curran: okay. so this definitely doesn't include that detail in here.

142
00:17:17.560 --> 00:17:19.270
Michael Lodder: Yeah. So we could add it.

143
00:17:19.910 --> 00:17:21.960
Stephen Curran: okay, so we need to add that

144
00:17:23.900 --> 00:17:27.779
Stephen Curran: the reach or are you taking notes here?

145
00:17:28.240 --> 00:17:30.799
Aritra B.: Yeah. You see. I have noted it.

146
00:17:31.340 --> 00:17:32.610
Michael Lodder: Okay.

147
00:17:32.710 --> 00:17:36.989
Stephen Curran: is that enough detail for you, or to be able to include it?

148
00:17:37.900 --> 00:17:40.389
Aritra B.: Yeah, I mean, I have to just write the

149
00:17:40.600 --> 00:17:47.180
Aritra B.: right? Just that that we are removing the middle point from the tails file so, or else we have to show the maths also.

150
00:17:47.530 --> 00:17:48.390
Stephen Curran: Okay.

151
00:17:49.210 --> 00:17:57.179
Aritra B.: so what? So should I also for the maths? I know. or only just say, that the middle one to the tail file is removed

152
00:17:58.030 --> 00:18:00.380
Aritra B.: because it's associated with the private key.

153
00:18:01.260 --> 00:18:09.560
Michael Lodder: Yeah, just say, it's L one. so that it's the L one index. So basically, you're supposed to create it like one to 2 l.

154
00:18:11.080 --> 00:18:16.450
Michael Lodder: But outlook one the special, for whatever reason. that

155
00:18:16.510 --> 00:18:23.910
Michael Lodder: you know. 5 years ago, when I talked to yon, he he had a decent reason Yan commit. So now I don't remember what that was.

156
00:18:26.560 --> 00:18:29.239
Michael Lodder: I think it was because he wanted

157
00:18:29.800 --> 00:18:38.729
Michael Lodder: it to be on. not as predictable like. If you always pick the first one that makes it easy to guess, whereas if it's somewhere in the middle, it wasn't

158
00:18:41.660 --> 00:18:44.700
Stephen Curran: oh, I see. But he did want to include it.

159
00:18:45.420 --> 00:18:53.550
Michael Lodder: Yeah, like, it has to be there for the for everything to work out. But he said, I just didn't want it as the first few indexes, because it was easy to guess

160
00:18:53.610 --> 00:18:54.890
Michael Lodder: I was like, Oh, okay.

161
00:18:57.220 --> 00:18:59.750
Stephen Curran: but we now we're leaving it out entirely

162
00:19:01.840 --> 00:19:04.409
Michael Lodder: out of the tails file.

163
00:19:04.850 --> 00:19:12.030
Stephen Curran: Yeah, it was never. It was never supposed to be in there. In the first place.

164
00:19:12.530 --> 00:19:13.560
Michael Lodder: that's right.

165
00:19:13.940 --> 00:19:14.640
Stephen Curran: Okay.

166
00:19:17.450 --> 00:19:22.040
Stephen Curran: okay? And I'd leave out the reason why we leave it out to say we leave it out.

167
00:19:27.760 --> 00:19:33.840
Stephen Curran:  okay, one to L l, 2 plus to 2 l.

168
00:19:36.210 --> 00:19:38.210
Michael Lodder: that's all in the Pdf.

169
00:19:38.680 --> 00:19:39.600
Stephen Curran: okay.

170
00:19:42.050 --> 00:19:45.570
Stephen Curran: okay? And then the other thing was,

171
00:19:47.340 --> 00:19:49.079
Stephen Curran: okay, this is good.

172
00:19:57.080 --> 00:19:58.560
Stephen Curran: What's this link?

173
00:20:01.460 --> 00:20:02.900
Stephen Curran: Okay?

174
00:20:05.610 --> 00:20:12.170
Stephen Curran: Oh, that's still it to do, anyway. I think this. Oh, you've removed it already. Thank you.

175
00:20:16.810 --> 00:20:27.209
Stephen Curran: Okay. And so this is right. 2 plus 12 times the size of the Revocation registry is is now correct, because the plus 1, one of them will be dropped away.

176
00:20:30.070 --> 00:20:30.790
Michael Lodder: Yeah.

177
00:20:30.960 --> 00:20:32.260
Stephen Curran: Yeah. Okay.

178
00:20:34.960 --> 00:20:41.149
Stephen Curran: Okay. let's a Richard. Can you make those changes and we'll get this one merged?

179
00:20:41.330 --> 00:20:53.529
Stephen Curran: Yeah, I'll update it by today. Oh, oh, you know what I wanted to do, or at least I wanted to ask you about this, Mike. I can add, this is another one. what data would be needed to create some test vectors.

180
00:20:54.620 --> 00:21:00.280
Stephen Curran: I was thinking, if we had Jason that basically produced, you know, like.

181
00:21:00.920 --> 00:21:04.029
Stephen Curran:  inputs to this.

182
00:21:06.540 --> 00:21:13.470
Stephen Curran: And then an output tails file in a in, you know, base 64 encoded

183
00:21:14.080 --> 00:21:15.800
Stephen Curran: as a test, vector

184
00:21:16.530 --> 00:21:20.390
Michael Lodder: a text vector to see if you've gender properly generated, a sales file.

185
00:21:20.610 --> 00:21:22.860
Stephen Curran: So what inputs would be needed

186
00:21:23.880 --> 00:21:28.490
Michael Lodder: The main thing you need is the curve and just

187
00:21:28.500 --> 00:21:31.749
Michael Lodder: the gamma, which is one of the private keys.

188
00:21:32.600 --> 00:21:39.139
Stephen Curran: They just say, here's, here's a gamma, that's a test. Vector obviously don't use this in production exactly.

189
00:21:39.830 --> 00:21:41.950
Michael Lodder: And just the curve, and that's it.

190
00:21:41.980 --> 00:21:45.739
Stephen Curran: And what does it mean by the curve? What would that include?

191
00:21:46.000 --> 00:21:47.719
Michael Lodder: Well, like for

192
00:21:48.450 --> 00:21:53.780
Michael Lodder: and not for what we're doing right now and the

193
00:21:53.830 --> 00:22:01.120
Michael Lodder: implementation. I'm just going to call it a non-credit implementation. It's using the Bn 254 curve.

194
00:22:02.550 --> 00:22:05.299
Michael Lodder: But any pairing-friendly curve would work.

195
00:22:05.510 --> 00:22:12.970
Stephen Curran: Okay? So you're saying, you just say what curve type it is. That's what you mean by curve. And then, the gamma being the private key

196
00:22:15.250 --> 00:22:16.370
Michael Lodder: for that.

197
00:22:16.620 --> 00:22:23.139
Stephen Curran: and then from and then you can put in the A base. 64 of the tail. Oh, and the number of credentials.

198
00:22:23.610 --> 00:22:24.440
Michael Lodder: Yeah.

199
00:22:25.290 --> 00:22:30.000
Stephen Curran: And and then the base 64 that you can compare your results to. Okay.

200
00:22:30.390 --> 00:22:31.130
Michael Lodder: yep.

201
00:22:31.330 --> 00:22:38.609
Stephen Curran: I'm gonna put a ticket in that, will we, you know, have a couple of vectors in there that people can use to for testing.

202
00:22:39.500 --> 00:22:47.519
Michael Lodder: Right? Does the curve tells you what? What are the generator points? What's the curve modulus? What you need. You need all of that. So

203
00:22:47.620 --> 00:22:52.049
Michael Lodder: the only the only value you really need is the the gamma

204
00:22:52.060 --> 00:22:54.359
Michael Lodder: and the curve. That's it.

205
00:22:54.850 --> 00:22:55.710
Stephen Curran: Okay.

206
00:22:55.910 --> 00:22:59.509
Stephen Curran: excellent. And I imagine there's some of those in the

207
00:22:59.540 --> 00:23:03.599
Stephen Curran: the existing implementation. I would think so, I should look there.

208
00:23:03.990 --> 00:23:05.089
Michael Lodder: there might be.

209
00:23:05.310 --> 00:23:06.830
Stephen Curran: yeah. Okay.

210
00:23:07.570 --> 00:23:09.250
Michael Lodder: Okay. I don't remember.

211
00:23:11.350 --> 00:23:19.859
Stephen Curran: okay, that one's close. Good Let me get back to her requests.

212
00:23:21.610 --> 00:23:25.369
Stephen Curran: this one. The only thing I was wondering is, is this.

213
00:23:25.560 --> 00:23:33.759
Stephen Curran:  specific to and on credits, or did you? Is this just a copy of what's in the Bvs. Plus?

214
00:23:34.840 --> 00:23:37.210
Aritra B.: A few of these are the copy. And

215
00:23:37.420 --> 00:23:44.410
Aritra B.: I found that there are some that are there in and on credits, but not in the Pvs. Whatever I could find, I had added.

216
00:23:44.510 --> 00:23:50.530
Aritra B.: but I'm not sure that there is any that I am. I haven't missed something. So

217
00:23:50.890 --> 00:23:59.000
Stephen Curran: I suspect we can put this in and adjust it later. Mike, do you see anything anyone else see anything that

218
00:24:00.290 --> 00:24:07.109
Stephen Curran: is wrong that would be wrong to put in here. and if there's anything obvious missing, we can add it.

219
00:24:14.740 --> 00:24:19.100
Michael Lodder: and I don't see anything wrong. I just don't know if we need all of it

220
00:24:23.610 --> 00:24:24.940
Stephen Curran: in particular.

221
00:24:26.810 --> 00:24:28.939
Michael Lodder: do we need range

222
00:24:32.130 --> 00:24:34.130
Michael Lodder: like the fourth one down?

223
00:24:36.170 --> 00:24:36.980
Stephen Curran: Yeah.

224
00:24:38.240 --> 00:24:43.769
Michael Lodder: maybe we do. It's hard to say. I mean it doesn't hurt to leave it in for now, because we can always delete it later.

225
00:24:43.890 --> 00:24:46.449
Stephen Curran: Yeah. let's leave it in for now.

226
00:24:50.120 --> 00:24:51.620
Stephen Curran: I think we're good with this one

227
00:24:54.490 --> 00:24:55.620
Stephen Curran: objective.

228
00:24:56.050 --> 00:24:56.820
Stephen Curran: Okay?

229
00:25:16.770 --> 00:25:20.570
Stephen Curran: All right. First, one to reach out nice work.

230
00:25:22.880 --> 00:25:25.069
Stephen Curran: Okay? Last one.

231
00:25:30.260 --> 00:25:37.160
Stephen Curran: Okay, this is the credential definition process Mike, do you want to look at it here? Or

232
00:25:37.610 --> 00:25:38.830
Michael Lodder: but there's fine.

233
00:25:39.040 --> 00:25:39.920
Stephen Curran: Okay?

234
00:25:41.450 --> 00:25:49.660
Stephen Curran: I, Richard, this is the one thing where it would be nice to include a here is where again, it would just happen.

235
00:25:50.210 --> 00:25:51.680
Michael Lodder: We're putting.

236
00:25:52.020 --> 00:25:58.530
Michael Lodder: just put a section in there like section. What is it? 2 or 3, or whatever you find

237
00:25:59.140 --> 00:26:00.790
Michael Lodder: this references. Section

238
00:26:24.400 --> 00:26:25.790
Stephen Curran: anything more.

239
00:26:29.720 --> 00:26:31.649
Michael Lodder: The rest of it looks pretty good.

240
00:26:32.470 --> 00:26:33.310
Stephen Curran: It's

241
00:26:34.460 --> 00:26:36.070
Michael Lodder: I think the rest is fine.

242
00:26:36.590 --> 00:26:41.970
Stephen Curran: Excellent. Okay.  okay.

243
00:26:42.860 --> 00:26:52.579
Stephen Curran: should this be to just a matter of interest? Just again, Randy Pot for me. Is this a link in an on credits? Rs, or should this be to cl signatures

244
00:26:57.040 --> 00:26:58.020
Stephen Curran: repo.

245
00:27:00.910 --> 00:27:03.080
Michael Lodder: Is there a Cl signatures repo?

246
00:27:03.400 --> 00:27:06.840
Stephen Curran: There is an oncred Cl signatures. Is the new

247
00:27:07.030 --> 00:27:08.739
Stephen Curran: replacement for Hersa.

248
00:27:12.940 --> 00:27:14.729
Stephen Curran: so I could click this link. And

249
00:27:15.360 --> 00:27:22.790
Michael Lodder: oh, cause I thought, I thought, okay, so you're extracting out the primitives from the actual protocol.

250
00:27:22.890 --> 00:27:26.619
Michael Lodder: And they were all meshed as one which I hated.

251
00:27:29.640 --> 00:27:32.680
Michael Lodder: So, yeah, this is, this is part of

252
00:27:34.350 --> 00:27:43.179
Stephen Curran: okay. So should this. For some reason, I'm having trouble clicking on a link. You know how tough that is.

253
00:27:48.610 --> 00:27:50.770
Stephen Curran: oh, nice.

254
00:27:55.880 --> 00:27:57.679
Michael Lodder: I love leaving out the age.

255
00:28:16.990 --> 00:28:22.110
Stephen Curran: Yeah. So this presumably calls. This is the call into our signatures. Right?

256
00:28:25.060 --> 00:28:25.930
Michael Lodder: Yeah.

257
00:28:26.140 --> 00:28:26.800
Stephen Curran: Yeah.

258
00:28:28.950 --> 00:28:37.190
Michael Lodder: Like to me, eventually it could be renamed to sign. which would be very helpful instead of new, credential, deaf.

259
00:28:40.970 --> 00:28:44.359
Stephen Curran: So if if a richer, you could change that one

260
00:28:44.920 --> 00:28:48.589
Stephen Curran: to a link directly into the Cl signatures repo.

261
00:28:50.130 --> 00:28:52.870
Stephen Curran: That would probably be a little better.

262
00:28:54.120 --> 00:28:57.350
Aritra B.: Okay, so I have to link the

263
00:28:57.580 --> 00:29:03.120
Aritra B.: the signing the creation of public key.

264
00:29:03.310 --> 00:29:04.380
Stephen Curran: That's function.

265
00:29:04.820 --> 00:29:05.600
Aritra B.: Okay?

266
00:29:18.540 --> 00:29:22.340
Stephen Curran: Yeah. Okay, good. Excellent. Okay.

267
00:29:24.130 --> 00:29:26.260
Stephen Curran: all right.

268
00:29:27.290 --> 00:29:32.670
Stephen Curran: good stuff. And we'll keep going with updates. over the next while.

269
00:29:33.090 --> 00:29:38.539
Stephen Curran: I wanted to get into So, as I said, DC, Gov is thinking of putting out a

270
00:29:38.690 --> 00:29:47.070
Stephen Curran: doing work, possibly by a code with us to support W. 3 C. Credentials with an ongrad.

271
00:29:47.370 --> 00:30:00.749
Stephen Curran: John Jordan came up with this term flux correct, which is a a thing that basically a rif off of what managed for me. And and I'll John talked about where

272
00:30:01.320 --> 00:30:08.520
Stephen Curran: by putting an on cred a signature on a what amounts to a a data integrity proof.

273
00:30:09.080 --> 00:30:22.649
Stephen Curran: We can have multiple signatures on a single credential. And this signature, as well as in an on cred, so that we have flexible credentials that can be used in multiple scenarios. So that's the goal of this.

274
00:30:24.130 --> 00:30:36.380
Stephen Curran: we want to produce and consume it on credits. Vcs and W. 3 C. Format such that we can FET, fade out the An on print format and only use the W. 3 C. Format. So that would be

275
00:30:36.570 --> 00:30:42.920
Stephen Curran: where we're going long term. this idea of flex grant siding with multiple signatures. So

276
00:30:43.230 --> 00:30:53.120
Stephen Curran: again, so dhs, for example, can use these and and other government organizations that must be able to support missed signatures.

277
00:30:53.300 --> 00:30:55.469
Stephen Curran: They. They have a.

278
00:30:55.560 --> 00:31:09.049
Stephen Curran: you see, with both. When they use the nest. They use the privacy conver features. but but they can use them as the fall back and use it on credits primary, and get the privacy preserving features of an on credits.

279
00:31:09.320 --> 00:31:12.880
Stephen Curran: eventually do the same with Jwt, so that.

280
00:31:13.120 --> 00:31:21.039
Stephen Curran: again, we can have multiple signatures on a credential but in Jwt format versus the data integrity proof.

281
00:31:21.960 --> 00:31:26.969
Stephen Curran: And for the data integrity proof. again, I

282
00:31:27.430 --> 00:31:30.359
Stephen Curran: for those familiar with Jason, Ld.

283
00:31:30.470 --> 00:31:41.870
Stephen Curran:  we don't have a way in it on cred to say, Oh, this is the context I want to use. So the context would be predefined, and we would use what's called the vocab feature

284
00:31:42.660 --> 00:31:45.670
Stephen Curran: and vocab, basically says.

285
00:31:45.860 --> 00:31:55.720
Stephen Curran: here's the Json. Ld, I'm going to use it. Anything that is not defined in the context that I've used. Here's a a generic

286
00:31:56.350 --> 00:32:01.569
Stephen Curran: string, basically to use for any undefined

287
00:32:01.800 --> 00:32:03.560
Stephen Curran: attribute.

288
00:32:03.580 --> 00:32:10.979
Stephen Curran: And so for the attributes within the credential itself, we use the vocab, and then we wouldn't have to have a specific

289
00:32:11.040 --> 00:32:13.100
Stephen Curran: Jason, Ld.

290
00:32:13.640 --> 00:32:17.330
Stephen Curran:  context for the

291
00:32:17.640 --> 00:32:22.099
Stephen Curran: for the attributes in the schema itself.

292
00:32:24.440 --> 00:32:27.870
Stephen Curran:  yeah, Steve.

293
00:32:28.320 --> 00:32:38.569
Steve McCown: yeah. Just real quick question on your first bullet on the last slide. using w threec. Form that and paid out a non-creds format.

294
00:32:38.670 --> 00:32:44.999
Steve McCown: So the W. Threec format right now allows you to use Cl signatures in a zk,

295
00:32:45.250 --> 00:32:49.490
Steve McCown: so is is that where you're heading? Or

296
00:32:50.720 --> 00:33:02.550
Steve McCown: that's that's the the direction then, to cause that's an optional right now with, and I was hoping that would become less optional. Doing is allowing

297
00:33:02.680 --> 00:33:12.110
Stephen Curran: you know, allowing, and a non-credit signature to be a proof sorry and an oncredit proof to be attached into the proof

298
00:33:12.170 --> 00:33:17.179
Stephen Curran: of a W. Threec. Format. Json, Ld. Data, integrity proof.

299
00:33:17.510 --> 00:33:18.870
Stephen Curran: and with that

300
00:33:18.980 --> 00:33:24.389
Stephen Curran: it it gets processed, used completely as it, and on credits.

301
00:33:24.610 --> 00:33:28.409
Stephen Curran: you know, blinded links. It linked secret.

302
00:33:28.630 --> 00:33:30.449
Stephen Curran: you know. No subject.

303
00:33:31.280 --> 00:33:35.029
Stephen Curran: all of the same things you get in and on credits. But

304
00:33:35.070 --> 00:33:40.550
Stephen Curran: the wrapping, the the data structure is W. Threec format compliant.

305
00:33:42.240 --> 00:33:57.709
Stephen Curran: Okay? Awesome that I just wanted to clarify as we got started. I'm I I I think this is excellent. Keep going

306
00:33:57.830 --> 00:34:08.409
Stephen Curran: shared that with the you know the Json Ld. Folks we've done at. In fact, Patrick, say that we did an actual demo of this, using a

307
00:34:08.550 --> 00:34:21.770
Stephen Curran: W. 3 C. Wallet and exchanging the credentials. And it it all worked. So this is to sort of complete the transition from proof of concepts into real real use.

308
00:34:23.179 --> 00:34:37.889
Stephen Curran: So the first work before for coding would be to formalize the the transformations that happen. Because really, that's all. It is you, we're just doing a transformation of the data elements into different places.

309
00:34:38.139 --> 00:34:59.279
Stephen Curran: But it's just simply moving Json elements around so align with the data. Integrity. Proof. standard is a a question I've really got to ask of Menu and Dave Longley. When they saw this, they said, oh, this looks really good. There's a couple of things we'd like you to align with the data integrity proof. So I I just have to find out what those are.

310
00:34:59.350 --> 00:35:12.089
Stephen Curran: so that one's kind of a just ask some questions and and read through the data integrity proof. for those not familiar with data. And Taylor deproof is really

311
00:35:12.370 --> 00:35:19.070
Stephen Curran:  the basis of a W threec, Json, Ld. Credential.

312
00:35:19.410 --> 00:35:38.360
Stephen Curran: the data integrity proof is the actual proof format. And then the W. 3 C. Is really just a profile that says, Oh, by the way, you're going to use data integrity proof. But you're also going to have these specific things that are required or or optionally used

313
00:35:38.590 --> 00:35:45.730
Stephen Curran: in that proof. So you can use a data integrity proof for everything for it to be a a verifiable credential that must have certain

314
00:35:45.740 --> 00:35:48.419
Stephen Curran: constraints on it. But that's it.

315
00:35:49.900 --> 00:35:51.910
Stephen Curran: start with the vocab.

316
00:35:52.380 --> 00:35:57.070
Stephen Curran:  Issue. Date is a required field.

317
00:35:57.160 --> 00:36:01.169
Stephen Curran: in a non credits. Obviously it might be

318
00:36:01.200 --> 00:36:13.609
Stephen Curran: within the schema, so there might be a an issue date within the schema, or it might have to be added, because it's not part of the schema. Obviously, if it's added, it's not signed

319
00:36:13.650 --> 00:36:20.109
Stephen Curran: with an on credit. So that's an interesting attribute. So we want to to find the handling of that.

320
00:36:20.520 --> 00:36:22.180
Michael Lodder: Why would it not be signed?

321
00:36:22.570 --> 00:36:25.060
Stephen Curran:  So

322
00:36:25.560 --> 00:36:30.569
Stephen Curran: the way we do this, I should have this up. So let me just open this up.

323
00:36:30.820 --> 00:36:36.759
Stephen Curran:  let's see.

324
00:36:42.150 --> 00:36:47.659
Michael Lodder: my thoughts are the the BC. Is just exactly that. It's just a data format.

325
00:36:47.850 --> 00:36:53.400
Michael Lodder: You don't have to store it as that. You can store the credential. However, you want.

326
00:36:53.810 --> 00:36:57.379
Michael Lodder: and then it just becomes like a transport or map.

327
00:36:58.130 --> 00:37:07.050
Stephen Curran: Yes, that's basically what we're doing. So this is what a what it looks like in a non credits format. This is a a credential.

328
00:37:07.200 --> 00:37:12.560
Stephen Curran: So if I come over here and I look at this one. This is what it looks like now in a on credits format.

329
00:37:13.000 --> 00:37:16.510
Stephen Curran: So it's a single name. Attribute

330
00:37:16.920 --> 00:37:25.679
Stephen Curran: Alice Jones, and it's got an encoding. And then here are the various elements all around it that are in the non credits. Okay.

331
00:37:26.990 --> 00:37:33.970
Stephen Curran: in W. Threec, it looks like this. This is where the actual data is stored.

332
00:37:35.590 --> 00:37:42.159
Stephen Curran: This is essentially a base 64 of all of those other attributes that we're in it.

333
00:37:43.160 --> 00:37:47.190
Stephen Curran:  a few things go here.

334
00:37:48.050 --> 00:37:52.120
Stephen Curran: but we've got this issuance date that is.

335
00:37:52.430 --> 00:37:58.519
Stephen Curran: outside of what is signed so and on. Credit simply signs these elements right?

336
00:37:58.980 --> 00:38:13.059
Stephen Curran: Plus. It, adds the the link secret. This is outside of what would be signed by an on. So that's why I'm saying not signed as part of this signal. It's not part of this signature.

337
00:38:13.660 --> 00:38:16.209
Michael Lodder: Well, couldn't you just add it in there

338
00:38:16.360 --> 00:38:20.140
Michael Lodder: and then, when you're when you're translating formats, you just

339
00:38:20.270 --> 00:38:21.520
Michael Lodder: paste it in there.

340
00:38:21.820 --> 00:38:33.900
Stephen Curran: there's ways to do that, but it's a bi-directional transformation. So whichever, when you start with, you have to be able to loop back and and produce it. So that's why I'm saying we've got to define how we handle it.

341
00:38:34.990 --> 00:38:36.270
Stephen Curran: Does that make sense?

342
00:38:36.460 --> 00:38:38.820
Stephen Curran: There's there's things you can do. I'm

343
00:38:38.910 --> 00:38:41.610
Stephen Curran: have to formalize. Okay, here's what we're gonna do.

344
00:38:42.920 --> 00:38:54.860
Stephen Curran: That's probably the trickiest feature, because it is a required field in and on preparing in W Threec. It is the only required field. So if I come back to this thing

345
00:38:55.390 --> 00:39:01.840
Stephen Curran: I don't have. Normally you would have a subject in here, or an id for the subject

346
00:39:01.940 --> 00:39:11.130
Stephen Curran: not necessary. And so we actually don't have it. although. you know, obviously in a schema you could put

347
00:39:11.410 --> 00:39:17.859
Stephen Curran: the subject in, and you can put issue with state into here. So that's one way to handle it. Does that make sense?

348
00:39:18.120 --> 00:39:20.430
Michael Lodder: That's what I do in the non credits, too?

349
00:39:20.460 --> 00:39:25.260
Stephen Curran: And I just use the Rfc, 339

350
00:39:25.580 --> 00:39:28.090
Stephen Curran: 333 90 iso dates.

351
00:39:29.200 --> 00:39:30.359
Michael Lodder: Sorry.

352
00:39:30.420 --> 00:39:33.629
Michael Lodder: Rfc. 3, 3 and a 9,

353
00:39:34.220 --> 00:39:48.200
Stephen Curran: yeah, 3, 3, 3, 9. That's date and time time time on the Internet. Timestamp. What? Yup, that's what what I was. Yeah, that's exactly what we talked about last week in the yeah, that we would use that and then encode it.

354
00:39:48.320 --> 00:39:52.549
Michael Lodder: They also correspond. The Iso 801. So

355
00:39:52.650 --> 00:39:54.940
Michael Lodder: you could say, it's a combination of both.

356
00:39:55.030 --> 00:39:57.140
Stephen Curran: Iso, yeah, that's it. Okay.

357
00:39:57.310 --> 00:40:02.040
Stephen Curran: versus. I didn't know that. Yeah, I didn't recognize the number 8, 601. I recognize

358
00:40:03.710 --> 00:40:18.689
Stephen Curran: we've got to make sure that all of these are supported in the Revocation, in both the issuance and in the presentation. and then reveal them unrevealed and self attested in the

359
00:40:19.690 --> 00:40:22.399
Stephen Curran: verifiable presentation

360
00:40:22.660 --> 00:40:23.670
Stephen Curran: format.

361
00:40:25.520 --> 00:40:33.779
Stephen Curran: we document the actual transformation. So Andrew has implemented all of these things. So there's there's code

362
00:40:34.590 --> 00:40:37.070
Stephen Curran: to actually do this.

363
00:40:37.240 --> 00:40:50.829
Stephen Curran:  it's just a question of exactly what they do. So he's written up the code to to do the transformation whoops. That's the wrong repo. That's what I thought, it looks a little easier than that.

364
00:40:53.480 --> 00:40:57.030
Stephen Curran:  so basically, he's

365
00:40:57.140 --> 00:41:00.290
Stephen Curran: got a a decode in an in code

366
00:41:01.740 --> 00:41:11.760
Stephen Curran: or sorry a 2 W threec. And a decode W, 3 C, which basically just manipulates the data to move it in and out of that signature field.

367
00:41:12.220 --> 00:41:18.809
Stephen Curran: So we wind up with the actual data elements. and it's just a a pretty simple transformation.

368
00:41:19.670 --> 00:41:23.449
Stephen Curran: There's the 2 in the from sorry. That's the 2. And the from

369
00:41:23.830 --> 00:41:28.400
Stephen Curran: so just documenting that? So we have it.

370
00:41:28.840 --> 00:41:32.880
Stephen Curran: document, how to handle multi-signature. Vcs.

371
00:41:32.900 --> 00:41:39.569
Stephen Curran: this is where again coming back to this format where

372
00:41:39.920 --> 00:41:50.429
Stephen Curran: there's multiple proofs in here. So there's a there would be a comma here with a NIST, a type of nest signature and a and another signature field.

373
00:41:53.750 --> 00:42:01.989
Michael Lodder: Yeah. So 1 one in one implementation. We did. Steve was or Steven. Sorry was we just put

374
00:42:02.020 --> 00:42:05.389
Michael Lodder: in the proof field we put

375
00:42:06.200 --> 00:42:07.060
Michael Lodder: pipes.

376
00:42:07.730 --> 00:42:18.570
Michael Lodder: and it was an array array of objects. So then they look similar to this, or we'd say, 5 steel Sig encoding whatever signature, whatever value.

377
00:42:18.680 --> 00:42:23.259
Michael Lodder: you know, and so on. So we have multiple values in there.

378
00:42:23.770 --> 00:42:31.890
Stephen Curran: And that's exactly what. yeah, that's the plan for what? What? for doing that with nest signatures and so on

379
00:42:33.360 --> 00:42:43.279
Stephen Curran:  longer term phone possibilities, as I mentioned using the same thing, but using Jwt's. And then this one's a little

380
00:42:43.300 --> 00:42:44.640
Stephen Curran: obscure.

381
00:42:44.960 --> 00:42:58.799
Stephen Curran: so I I don't have to go into this one. But for those who understand Jason Le. And what a data integrated group does, it's basically signing the entire contact. So it is signed signs the

382
00:42:59.260 --> 00:43:25.480
Stephen Curran: context of the credential plus the data values within it. That's that's essentially what's being signed. So the one thing, obviously, and on credit signs the data values, but it doesn't sign. Well, the encoded data values, but it doesn't sign the Jsonlde because it has no concept of Jsonlde. But there are ways that we could possibly do that. that I've come up with, or

383
00:43:25.770 --> 00:43:29.820
Stephen Curran: thought of, and may or may not want to go further with that.

384
00:43:30.990 --> 00:43:45.269
Stephen Curran: So that's formalizing what we're gonna do. Then the next one is coding it. So the ability to receive a current credential signed with an on A on cred, but in W 3 C format

385
00:43:46.030 --> 00:43:51.390
Stephen Curran: and basically it's just transform it into an on credits and process it.

386
00:43:52.030 --> 00:44:10.030
Stephen Curran:  you want to retain the the client, the holder would want to retain both forms in case there's multiple signatures on it, so they they might want to hold on to the A non credits format. They might want to hold on to the W. 3 C. Format, so they might have both.

387
00:44:10.150 --> 00:44:40.780
Stephen Curran:  for this I'm not entirely sure where the line is between an oncredit Rs. The In on credits, implementation, and storage. Where is the line between, say, occupy, and a on credits and the storage area's frame where Javascript and on credits and the storage. So this is just a clarification to be done. How much of it is done in an on Credits library itself, and how much is just left to the holder software to handle.

388
00:44:43.220 --> 00:44:54.280
Stephen Curran: receiving a verified presentation in W. Threec format at at minimum transform and process and return. A, you know. verified, not verified.

389
00:44:54.470 --> 00:45:07.390
Stephen Curran: and then there's a question of whether return the data in both the W. 3 C. Format that it was received in, and then on credit, so that it could be saved in in either format.

390
00:45:09.680 --> 00:45:17.950
Stephen Curran: Then, once we're able to handle receiving them. We obviously want to generate them. So an option in

391
00:45:18.060 --> 00:45:25.759
Stephen Curran: in the generate for the Vc. To say, Hey, I want to put the data in and on credits of W. Threec. Format

392
00:45:26.140 --> 00:45:36.480
Stephen Curran: you may have received the data. not just in an on credits format, but in W. 3 C. Format already, perhaps with the proof already on it.

393
00:45:36.740 --> 00:45:50.300
Stephen Curran: So the idea there would be. You receive a W. Threec. Proof, but you want it and then on credit signature attached to it. So an additional proof added, so that may be, the operation being done, in which case.

394
00:45:50.510 --> 00:46:02.950
Stephen Curran:  you need to take the data out of the format it's in now generated and on credits matching the schema and the credential definition being used, transforms W. 3 C format.

395
00:46:03.070 --> 00:46:04.740
Stephen Curran: potentially adding.

396
00:46:04.810 --> 00:46:18.989
Stephen Curran:  the credential to the sign and handing it back. And then this is some notes on, you know the issue date field. Whether it's part of the schema or whether it's not included in the schema and what to do about it.

397
00:46:22.530 --> 00:46:40.959
Stephen Curran: Same thing with verifiable presentation format. Obviously there would never be multiple signatures on it in this case. So it's a matter of just generating the on credits, transforming it to the Vp and returning it with the issue date set to the current date time. That was easy.

398
00:46:43.430 --> 00:47:02.850
Stephen Curran: and then finally, a demonstration of it by putting encoding it in occupy, adding flood, adding, ability to do multiple signatures on a single one. So what's the Api look like in Acupy? What is the Api look like to say, Hey, I want this in W. Threec format.

399
00:47:03.660 --> 00:47:10.369
Stephen Curran:  My hope is that with doing that we get all the features we need

400
00:47:12.190 --> 00:47:19.680
Stephen Curran: in a you know, if I define this as a as a task for a developer, can we get all the way through that?

401
00:47:20.340 --> 00:47:33.920
Stephen Curran:  again? I I don't know if people have any feedback on that plan. But the, as I say, the idea would be to put this to find this as a package and say, This is what we want done

402
00:47:34.110 --> 00:47:42.559
Stephen Curran: as a coding exercise. We'll probably do this part ahead of time, so decisions are made ahead of time. But the rest of this

403
00:47:42.790 --> 00:47:47.130
Stephen Curran: would be a a code project

404
00:47:47.170 --> 00:47:53.369
Stephen Curran: that we would publish out, possibly with with funding attached to say, Hey, implement this.

405
00:47:59.810 --> 00:48:03.099
Stephen Curran: So I don't know if people have feedback on that interest

406
00:48:10.220 --> 00:48:26.019
Stephen Curran: all right. If as I say, we're likely. BC, I was thinking of posting this, so we would. We'll definitely let people know when this is is posted and out there. If that gets done, and and encourage folks to

407
00:48:26.500 --> 00:48:35.299
Stephen Curran: think about implementing it. If anyone wants to contribute, or wants to help to find the direction of this. welcome your feedback on in doing that.

408
00:48:38.030 --> 00:48:39.310
Stephen Curran: All right.

409
00:48:40.070 --> 00:48:53.040
Stephen Curran:  The last thing was, is there any other topics people want to  talk about on this call, or is there any other topics to go over?

410
00:49:00.750 --> 00:49:04.870
Stephen Curran: We'll do, Steve. I'll post the slides and share that

411
00:49:10.830 --> 00:49:13.479
Stephen Curran: all right. Productive meeting. Thank you all.

412
00:49:15.340 --> 00:49:21.759
Stephen Curran: So anyone has any questions or comments or anything. Let's go back and forth on discord.

413
00:49:22.010 --> 00:49:36.430
Stephen Curran: a richer is going to keep working with Mike on doing additional parts. I have some to do in the specification to work on, so we should have a few more things in the next couple of weeks to talk about on the next call

414
00:49:37.530 --> 00:49:42.719
Stephen Curran: next week we'll The plan is to do some more on

415
00:49:42.760 --> 00:49:46.649
Stephen Curran: and our price, too. So next week it's the later

416
00:49:46.810 --> 00:49:49.190
Stephen Curran: call, and we'll do. I know it credits to

417
00:49:52.640 --> 00:49:53.650
Stephen Curran: all right.

418
00:49:54.720 --> 00:49:57.929
Stephen Curran: Thanks. All have a great week.

419
00:49:59.160 --> 00:50:00.020
Michael Lodder: Thanks.

420
00:50:00.430 --> 00:50:02.060
Rodolfo Miranda: Thank you, everyone.

421
00:50:02.270 --> 00:50:04.270
Matteo Midena: Thank you. Bye.

422
00:50:04.780 --> 00:50:06.110
Bruno Evaristo: thank you. Bye, bye.

